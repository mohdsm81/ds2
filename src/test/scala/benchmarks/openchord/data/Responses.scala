package benchmarks.openchord.data

import edu.utah.cs.gauss.ds2.core.ir.datastructures.Agent

/**
 * this class represents the response message that a requesting node received
 * 
 * @author zepeng zhao
 */
class Responses() extends Serializable {
  //String represents the requesting id generated by the chord when a request is raised.
  private var responses:Map[Agent, Set[Entry]] = Map()
  
  def copy: Responses = {
    val newOne = new Responses
    newOne.responses = responses.map{case (k,v) => k -> v.map{identity}}
    newOne
  }
  
  def containsKey(client:Agent):Boolean = responses.contains(client)
  
  def remove(client:Agent):Set[Entry] = {
    var res:Set[Entry] = null
    if(this.containsKey(client)){
      res = this.get(client)
      this.responses = this.responses.filterKeys(_!=client)
    }
    res
  }
  
  private def get(client:Agent):Set[Entry] = responses(client)
  
  def receive(client: Agent, e:Set[Entry]){
    this.responses = this.responses+(client->e)
  }    
}